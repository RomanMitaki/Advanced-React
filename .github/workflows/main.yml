name: linting, testing, building
on:
  pull_request:
    branches: [main]

jobs:
  Pipeline:
    runs-on: [ubuntu-latest]
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      # 1. Проверяем репозиторий
      - uses: actions/checkout@v4

      # 2. Устанавливаем Node.js
      - name: Staring Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # 3. Кэшируем npm-зависимости для ускорения
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 4. Устанавливаем зависимости
      - name: Install dependencies
        run: npm install --include=dev

      # 5. Собираем проект в продакшн-режиме
      - name: Build production project
        run: npm run build:prod

      # 6. Проверяем линтинг TypeScript и SCSS
      - name: Linting
        run: |
          npm run lint:ts
          npm run lint:scss
        if: always()

      # 7. Запускаем unit-тесты
      - name: Unit Testing
        run: npm run test:unit
        if: always()

      # 8. Собираем Storybook (если нужен билд)
      - name: Build Storybook
        run: npm run storybook:build
        if: always()

      # 9. Восстанавливаем baseline для визуальных тестов
      - name: Restore Loki Baseline
        uses: actions/download-artifact@v4
        with:
          name: loki-baseline
          path: .loki/reference

      # 10. Запускаем визуальные тесты (Loki)
      - name: Screenshot Testing (Loki)
        run: npm run test:ui:ci
        if: always()

      # 11. Сохраняем новый baseline, если есть изменения
      - name: Publish Loki Baseline
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: loki-baseline
          path: .loki/current

      # 12. Сохраняем результаты (например, снимки экрана, отчеты)
      - name: Upload Loki Report
        uses: actions/upload-artifact@v4
        with:
          name: loki-report
          path: .loki